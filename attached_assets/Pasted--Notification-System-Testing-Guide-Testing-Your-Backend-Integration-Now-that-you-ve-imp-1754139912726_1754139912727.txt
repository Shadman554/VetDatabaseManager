# Notification System Testing Guide

## 🎯 Testing Your Backend Integration

Now that you've implemented the notification endpoints, here's how to test and verify everything is working:

## 1. Test Backend Endpoints Directly

### Test with curl or Postman:

```bash
# Test get recent notifications
curl -X GET https://python-database-production.up.railway.app/api/notifications/recent/latest

# Test get all notifications
curl -X GET https://python-database-production.up.railway.app/api/notifications/

# Test create notification (if you have admin access)
curl -X POST https://python-database-production.up.railway.app/api/notifications/ \
  -H "Content-Type: application/json" \
  -d '{
    "title": "تاقیکردنەوە",
    "content": "ئەمە تاقیکردنەوەیەکە بۆ سیستەمی ئاگادارکردنەوەکان",
    "type": "general"
  }'

# Test mark as read
curl -X PUT https://python-database-production.up.railway.app/api/notifications/1/read

# Test mark all as read
curl -X PUT https://python-database-production.up.railway.app/api/notifications/mark-all-read
```

## 2. Expected API Response Format

Your endpoints should return data in this format:

### GET /api/notifications/recent/latest
```json
[
  {
    "id": 1,
    "title": "بەخکراوەکان بە VET DICT+",
    "content": "بەخکراوەکان لە فەرهەنگی پزیشکی ئاژەڵەکان...",
    "type": "general",
    "is_read": false,
    "created_at": "2025-01-02T12:00:00Z"
  },
  {
    "id": 2,
    "title": "دەرمانی نوێ",
    "content": "دەرمانی نوێ زیادکراوە...",
    "type": "drug",
    "is_read": false,
    "created_at": "2025-01-02T10:00:00Z"
  }
]
```

## 3. Flutter App Testing

### Check Console Logs:
When you run the Flutter app, look for these logs:

**✅ Success:**
```
I/flutter: Successfully loaded 5 notifications
```

**❌ Error:**
```
I/flutter: Error fetching recent notifications: [error details]
```

### App Behavior:
1. **On App Start**: Notification icon should show unread count badge
2. **Click Notification Icon**: Dialog opens with recent notifications
3. **Click Notification**: Marks as read, unread count decreases
4. **Mark All as Read**: All notifications marked as read, badge disappears

## 4. Sample Test Data

Add this sample data to your database for testing:

```sql
INSERT INTO notifications (title, content, type, is_read, created_at) VALUES
('بەخکراوەکان بە VET DICT+', 'بەخکراوەکان لە فەرهەنگی پزیشکی ئاژەڵەکان. ئەم فەرهەنگە کۆمەکتان دەکات لە فێربوون و زانینی پزیشکی.', 'general', 0, datetime('now', '-2 hours')),
('دەرمانی نوێ زیادکراوە', 'دەرمانی نوێ زیادکراوە بۆ چارەسەرکردنی نەخۆشییەکانی گورگ و مەڕ. تکایە بەشی دەرمانەکان بپشکنن.', 'drug', 0, datetime('now', '-5 hours')),
('نەخۆشی نوێ', 'زانیاری نوێ دەربارەی نەخۆشییەکانی سیستەمی هەناسە لە ئاژەڵەکان زیادکراوە.', 'disease', 1, datetime('now', '-1 day')),
('تاقیکردنەوەی نوێ', 'تاقیکردنەوەی نوێ زیادکراوە بۆ پشکنینی زانیاریتان لە بواری پزیشکی ئاژەڵان.', 'quiz', 0, datetime('now', '-3 hours')),
('نوێکردنەوەی ئەپڵیکەیشن', 'وەشانی نوێی ئەپڵیکەیشن ئامادەیە. تکایە نوێی بکەنەوە بۆ بەکارهێنانی تایبەتمەندییە نوێیەکان.', 'update', 0, datetime('now', '-1 hour'));
```

## 5. Troubleshooting

### Common Issues:

**1. No notifications showing:**
- Check if API endpoints return 200 status
- Verify database has notification data
- Check Flutter console for error messages

**2. Notifications not marking as read:**
- Test PUT endpoints with curl/Postman
- Check if notification IDs match between frontend and backend
- Verify database updates when mark-as-read is called

**3. Unread count not updating:**
- Check if `is_read` field is boolean (0/1 or true/false)
- Verify API returns correct `is_read` values
- Check Flutter console for count calculation logs

## 6. Admin Panel Integration

Create a simple admin form to send notifications:

```html
<form action="/api/notifications/" method="POST">
    <input type="text" name="title" placeholder="عنوان ئاگادارکردنەوە" required>
    <textarea name="content" placeholder="ناوەڕۆکی ئاگادارکردنەوە" required></textarea>
    <select name="type">
        <option value="general">گشتی</option>
        <option value="drug">دەرمان</option>
        <option value="disease">نەخۆشی</option>
        <option value="quiz">تاقیکردنەوە</option>
        <option value="update">نوێکردنەوە</option>
        <option value="reminder">بیرخستنەوە</option>
    </select>
    <button type="submit">ناردنی ئاگادارکردنەوە</button>
</form>
```

## 7. Success Indicators

**✅ Everything Working:**
- API endpoints return proper JSON data
- Flutter app shows "Successfully loaded X notifications" in console
- Notification dialog opens with real data from your database
- Clicking notifications marks them as read
- Unread count badge updates correctly
- Admin can send new notifications that appear in the app

**🎉 Ready for Production!**
Once all tests pass, your notification system is fully functional and ready for your users!

## Next Steps
1. Test all endpoints with your actual backend
2. Add sample notification data
3. Test the Flutter app
4. Create admin interface for sending notifications
5. Monitor logs for any issues
6. Deploy to production!
